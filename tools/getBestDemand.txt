int getBestDemandCount(const int shiftTime[30][24], const int shiftCount, const int sum, const int demand[24])
{
    int demandCount = 0, cur = 24, curSum = sum;

    while (curSum > 0 && cur >= 12)
    {
        int maxIdx = -1, max = -1;
        for (int i = 0; i < shiftCount; i++)
        {
            cur = 0;
            for (int j = 0; j < 24; j++)
            {
                if (demand[j] > 0 && shiftTime[i][j] == 1)
                {
                    cur++;
                }
            }
            maxIdx = (cur > max) ? i : maxIdx;
            max = (cur > max) ? cur : max;
        }
        cur = max;
        curSum -= max;
        demandCount++;
        // cout << "result( " << curSum << " " << cur << " )\n";
    }
    // cout << "==============================\n";
    return demandCount;
}